import random
import time
import openpyxl

start=time.time()
excel_file_path = 'HERE THE PATH'


L = []
for k in range(24):
    L.append([])

workbook = openpyxl.load_workbook(excel_file_path)
sheet = workbook.active

for row in sheet.iter_rows(min_row=2, values_only=True):
    # Convert values to the desired data types if needed
    row_data = [int(row[0]), int(row[1]), int(row[2]), 0]
    L[int(row[2])].append(row_data)



inter=time.time()

print("File imported in ", inter-start, " seconds")

def maxx(L):
    maxL=len(L[0])
    kf=0
    for k in range(len(L)):
        if len(L[k])>maxL:
            maxL=len(L[k])
            kf=k
    return [maxL,kf]

def minn(L):
    minL=len(L[0])
    kf=0
    for k in range(len(L)):
        if len(L[k])<minL:
            minL=len(L[k])
            kf=k
    return [minL,kf]

mean=0
for p in range(24):
    mean+=len(L[p])
mean=mean/24

for k in range(len(L)):
    print(len(L[k]))

while minn(L)[0] < 0.6 * maxx(L)[0]:  # Replace minn() and maxx() with your actual functions  
    maxxxL=maxx(L)[1]
    minnnL=minn(L)[1]

    if len(L[(maxxxL-1)%24])<len(L[(maxxxL+1)%24]):
        if len(L[maxxxL])>100:
            choices = random.sample(L[maxxxL], 100)#  inversely proportional to track change !
        else: 
            choices=L[maxxxL]
        for choice in choices:
            if random.random()<0.2+1/(choice[3]+1):
                choice[3]+=1
                L[(maxxxL - 1) % 24].append(choice)
                L[maxxxL].remove(choice)
        
    else:
        if len(L[maxxxL])>100:
            choices = random.sample(L[maxxxL], 100)#  inversely proportional to track change !
        else: 
            choices=L[maxxxL]
        for choice in choices:
            if random.random()<0.2+1/(choice[3]+1):
                choice[3]+=1
                L[(maxxxL + 1) % 24].append(choice)
                L[maxxxL].remove(choice)


    if len(L[(minnnL-1)%24])<len(L[(minnnL+1)%24]):
        if len(L[(minnnL+1)%24])>100:
            choices = random.sample(L[(minnnL+1)%24], 100)#  inversely proportional to track change !
        else: 
            choices=L[(minnnL+1)%24]
        for choice in choices:
            if random.random()<0.2+1/(choice[3]+1):
                choice[3]+=1
                L[minnnL].append(choice)
                L[(minnnL+1)%24].remove(choice)
        
    else:
        if len(L[(minnnL-1)%24])>100:
            choices = random.sample(L[(minnnL-1)%24], 100)#  inversely proportional to track change !
        else: 
            choices=L[(minnnL-1)%24]
        for choice in choices:
            if random.random()<0.2+1/(choice[3]+1):
                choice[3]+=1
                L[minnnL].append(choice)
                L[(minnnL-1)%24].remove(choice)
            
            


            
print("successful")

end=time.time()
print("program exectution in =",end-inter," seconds")
