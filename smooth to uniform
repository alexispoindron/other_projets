import random
import openpyxl

excel_file_path = 'HERE THE PATH'

L = []
for k in range(24):
    L.append([])

workbook = openpyxl.load_workbook(excel_file_path)
sheet = workbook.active

for row in sheet.iter_rows(min_row=2, values_only=True):
    # Convert values to the desired data types if needed
    row_data = [int(row[0]), int(row[1]), int(row[2]), 0]
    L[int(row[2])].append(row_data)



inter=time.time()

print("File imported in ", inter-start, " seconds")


batch1=10
batch2=5
batch3=30

BIGL=[]
for k in range(batch3):
    BIGL.append([])
for k in range(batch3):
    for r in range(24):
        BIGL[k].append([])

for k in range(batch3):
    for p in range(24):
        for q in range(len(L[p])):
            if q%batch3==k:
                BIGL[k][p].append(L[p][q])

start=time.time()

def maxx(LLL):
    maxL=len(LLL[0])
    kf=0
    for k in range(len(LLL)):
        if len(LLL[k])>maxL:
            maxL=len(LLL[k])
            kf=k
    return [maxL,kf]

def minn(LLL):
    minL=len(LLL[0])
    kf=0
    for k in range(len(LLL)):
        if len(LLL[k])<minL:
            minL=len(LLL[k])
            kf=k
    return [minL,kf]

mean=0
for p in range(24):
    mean+=len(L[p])
mean=mean/24

for k in range(len(L)):
    print(len(L[k]))


for ba in range(batch3):
    while minn(BIGL[ba])[0] < 0.9 * maxx(BIGL[ba])[0]:
        maxxxL=maxx(BIGL[ba])[1]
        minnnL=minn(BIGL[ba])[1]

        for k in range(batch1):
            if len(BIGL[ba][(maxxxL-1)%24])<len(BIGL[ba][(maxxxL+1)%24]):
                if len(BIGL[ba][maxxxL])>batch2:
                    choices = random.sample(BIGL[ba][maxxxL], batch2)
                else: 
                    choices=BIGL[ba][maxxxL]
                for choice in choices:
                    if random.random()<0.3+1/(choice[3]+1):
                        choice[3]+=1
                        BIGL[ba][(maxxxL - 1) % 24].append(choice)
                        BIGL[ba][maxxxL].remove(choice)
                
            else:
                if len(BIGL[ba][maxxxL])>batch2:
                    choices = random.sample(BIGL[ba][maxxxL], batch2)
                else: 
                    choices=BIGL[ba][maxxxL]
                for choice in choices:
                    if random.random()<0.3+1/(choice[3]+1):
                        choice[3]+=1
                        BIGL[ba][(maxxxL + 1) % 24].append(choice)
                        BIGL[ba][maxxxL].remove(choice)


            if len(BIGL[ba][(minnnL-1)%24])<len(BIGL[ba][(minnnL+1)%24]):
                if len(BIGL[ba][(minnnL+1)%24])>batch2:
                    choices = random.sample(BIGL[ba][(minnnL+1)%24], batch2)
                else: 
                    choices=BIGL[ba][(minnnL+1)%24]
                for choice in choices:
                    if random.random()<0.2+1/(choice[3]+1):
                        choice[3]+=1
                        BIGL[ba][minnnL].append(choice)
                        BIGL[ba][(minnnL+1)%24].remove(choice)
                
            else:
                if len(BIGL[ba][(minnnL-1)%24])>batch2:
                    choices = random.sample(BIGL[ba][(minnnL-1)%24], batch2)
                else: 
                    choices=BIGL[ba][(minnnL-1)%24]
                for choice in choices:
                    if random.random()<0.2+1/(choice[3]+1):
                        choice[3]+=1
                        BIGL[ba][minnnL].append(choice)
                        BIGL[ba][(minnnL-1)%24].remove(choice)
                    

             

final_list=[]
for k in range(24):
    final_list.append([])

for k in range(24):
    for p in range(batch3):
        final_list[k].append(BIGL[p][k])



print("successful")

end=time.time()
print("program exectution in =",end-start," seconds")
            
            
  
                L[minnnL].append(choice)
                L[(minnnL-1)%24].remove(choice)
            
            
